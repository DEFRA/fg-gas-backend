name: Check Pull Request

on:
  pull_request:
    branches:
      - main
      - dev
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use Node version
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit -- --coverage

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run integration tests
        run: DEBUG=testcontainers:containers npm run test:integration

      - name: Build docker image
        run: |
          set +e
          docker build --no-cache --tag fg-gas-backend .
          exit $?

  contract-tests:
    name: Run Contract Tests
    runs-on: self-hosted
    if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check available services on self-hosted runner
        run: |
          echo "Checking for pre-running services..."
          curl -f http://localhost:3001/health || echo "Port 3001: No service"
          curl -f http://localhost:3002/health || echo "Port 3002: No service" 
          curl -f http://localhost:3003/health || echo "Port 3003: No service"
          curl -f http://localhost:3004/health || echo "Port 3004: No service"
          curl -f http://localhost:3005/health || echo "Port 3005: No service"

          echo "Checking MongoDB availability..."
          nc -z localhost 27017 && echo "MongoDB on 27017: Available" || echo "MongoDB on 27017: Not available"
          nc -z localhost 27018 && echo "MongoDB on 27018: Available" || echo "MongoDB on 27018: Not available"

      - name: Run contract tests
        run: DEBUG=testcontainers:containers npm run test:contracts
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          PACT_BROKER_BASE_URL: https://ffc-pact-broker.azure.defra.cloud
          PACT_USER: ${{ secrets.PACT_USER }}
          PACT_PASS: ${{ secrets.PACT_PASS }}
          DOCKER_HOST: unix:///var/run/docker.sock
          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
